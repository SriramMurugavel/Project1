@model EmpPortal.Models.signup
@using CaptchaMvc.HtmlHelpers;

@{
    ViewBag.Title = "signup";
    Layout = "~/Views/Shared/_NewLayoutPage.cshtml";
}

<script language="javascript" src="http://code.jquery.com/jquery-1.11.1.js"></script>
<script language="javascript" type="text/javascript">
    function AcceptTermAndcondition() {

        if ($("#chkcondition").is(':checked')) {
            return true;
        }
        else {
            alert("Please accept term and condition");
            return false;
        }
    }
</script>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>signup</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.empid, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.empid, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.empid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.mobileno, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.mobileno, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.mobileno, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.emailid, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.emailid, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.emailid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.confirmpassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.confirmpassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.confirmpassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.securityquestion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("securityquestion", new List<SelectListItem>
    { new SelectListItem{Text="What is your favorite food?",Value="What is your favorite food?",Selected=true},
      new SelectListItem{Text="What is your favorite sport?",Value="What is your favorite sport?"},
       new SelectListItem{Text="What is your favorite cricketer?",Value="Who is your favorite cricketer?"}});
    @*@Html.EditorFor(model => model.securityquestion, new { htmlAttributes = new { @class = "form-control" } })*@
    @Html.ValidationMessageFor(model => model.securityquestion, "", new { @class = "text-danger" })
</div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.securityanswer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.securityanswer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.securityanswer, "", new { @class = "text-danger" })
        </div>
    </div>
    <div>
        @Html.TextArea("Termandcondition", "Term and condition of services.....", new { @height = "135px", @width = "251px", @id = "txtcondition" })
    </div>@Html.CheckBox("Condition", false, new { @id = "chkcondition" })<a href="#">Term and condition</a>
    <br />
    
    <div style="color:Red">@ViewBag.Message</div>




    <div>
        @Html.Captcha(5)

        <p class="Error">@ViewBag.ErrMessage</p>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="submit" onclick="javascript:return AcceptTermAndcondition();" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
